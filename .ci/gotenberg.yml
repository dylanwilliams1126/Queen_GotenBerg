# The port the application will listen to.
port: 3000

logs:
  # Accepted values, in order of severity: DEBUG, INFO, WARN, ERROR, FATAL, PANIC.
  # Messages at and above the selected level will be logged.
  level: "INFO"

  # Accepted values: text, json.
  # When a TTY is not attached, the output will be in the defined format.
  format: "text"

# You don't like a library which is used for a conversion? You may provide here your own implementation.
commands:

  markdown:
    # Duration in seconds after which the command will be killed if it has not finished.
    timeout: 30
    # The command template: you have access to FilePath and ResultFilePath variables.
    template: "markdown-pdf {{ .FilePath }} -o {{ .ResultFilePath }}"

  html:
    timeout: 30
    template: "xvfb-run -e /dev/stdout wkhtmltopdf {{ .FilePath }} {{ .ResultFilePath }}"

  office:
    timeout: 30
    template: "unoconv --format pdf --output \"{{ .ResultFilePath }}\" \"{{ .FilePath }}\""

  merge:
    timeout: 30
    # Unlike others commands' templates, you have access to FilesPaths instead of FilePath: it gathers all PDF files which should be merged.
    template: "pdftk {{ range $filePath := .FilesPaths }} {{ $filePath }} {{ end }} cat output {{ .ResultFilePath }}"